由于文件 (符号) 而包含了归档成员

kernel/chr_drv/chr_drv.a(console.o)
                              kernel/kernel.o (console_print)

分配公共符号
公共符号            大小              文件

___strtok           0x4               kernel/kernel.o

舍弃的输入节

 .note.GNU-stack
                0x0000000000000000        0x0 init/Main.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/kernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/chr_drv/chr_drv.a(console.o)

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0x0
LOAD boot/head.o
LOAD init/Main.o
LOAD kernel/kernel.o
LOAD kernel/chr_drv/chr_drv.a
                [!provide]                        PROVIDE (__executable_start, 0x8048000)
                0x0000000008048000                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048000        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt
 *(.plt)
 *(.iplt)

.plt.got
 *(.plt.got)

.text           0x0000000000000000     0x6f0b
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 .text.unlikely
                0x0000000000000000        0x0 init/Main.o
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000     0x64b8 boot/head.o
                0x0000000000000000                _pg_dir
                0x0000000000000000                _start
                0x0000000000001000                pg0
                0x0000000000002000                pg1
                0x0000000000003000                pg2
                0x0000000000004000                pg3
                0x0000000000005000                _tmp_floppy_area
                0x00000000000054b8                _idt
                0x0000000000005cb8                _gdt
 *fill*         0x00000000000064b8        0x8 
 .text          0x00000000000064c0       0x83 init/Main.o
                0x00000000000064c0                Main
 .text          0x0000000000006543      0x8d2 kernel/kernel.o
                0x0000000000006543                printk
                0x0000000000006773                strcpy
                0x0000000000006789                strncpy
                0x00000000000067a8                strcat
                0x00000000000067cb                strncat
                0x00000000000067f8                strcmp
                0x000000000000681b                strncmp
                0x0000000000006845                strchr
                0x0000000000006864                strrchr
                0x0000000000006885                strspn
                0x00000000000068b8                strcspn
                0x00000000000068eb                strpbrk
                0x000000000000691e                strstr
                0x0000000000006951                strlen
                0x000000000000696a                strtok
                0x00000000000069e8                memcpy
                0x00000000000069fe                memmove
                0x0000000000006a24                memcmp
                0x0000000000006a48                memchr
                0x0000000000006a6f                memset
                0x0000000000006a83                vsprintf
 .text          0x0000000000006e15       0xf6 kernel/chr_drv/chr_drv.a(console.o)
                0x0000000000006e15                consloe_set_cursor
                0x0000000000006e48                consloe_clear
                0x0000000000006e75                console_print
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.rodata         0x0000000000006f0c      0x159
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.1
                0x0000000000006f0c       0x44 init/Main.o
 .rodata        0x0000000000006f50       0xc8 kernel/kernel.o
 .rodata.str1.4
                0x0000000000007018       0x4d kernel/kernel.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000007068      0x44c
 *(.eh_frame)
 .eh_frame      0x0000000000007068       0x80 init/Main.o
 .eh_frame      0x00000000000070e8      0x370 kernel/kernel.o
 .eh_frame      0x0000000000007458       0x5c kernel/chr_drv/chr_drv.a(console.o)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000000084b4                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000000084b4        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x00000000000084b4        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x00000000000084b4        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x00000000000084b4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000000084b4        0x0
 *(.got.plt)
 *(.igot.plt)

.data           0x00000000000084b4        0x9
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000000084b4        0x0 boot/head.o
 .data          0x00000000000084b4        0x8 init/Main.o
                0x00000000000084b4                init_stack
 .data          0x00000000000084bc        0x0 kernel/kernel.o
 .data          0x00000000000084bc        0x1 kernel/chr_drv/chr_drv.a(console.o)
                0x00000000000084bc                font_arrt

.data1
 *(.data1)
                0x00000000000084bd                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x00000000000084bd                . = .
                0x00000000000084bd                __bss_start = .

.bss            0x00000000000084c0      0x408
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000000084c0        0x0 boot/head.o
 .bss           0x00000000000084c0        0x0 init/Main.o
 .bss           0x00000000000084c0      0x400 kernel/kernel.o
 .bss           0x00000000000088c0        0x4 kernel/chr_drv/chr_drv.a(console.o)
                0x00000000000088c0                fg_console
 *(COMMON)
 COMMON         0x00000000000088c4        0x4 kernel/kernel.o
                0x00000000000088c4                ___strtok
                0x00000000000088c8                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000000088c8                . = ALIGN (0x4)
                0x00000000000088c8                . = SEGMENT_START ("ldata-segment", .)
                0x00000000000088c8                . = ALIGN (0x4)
                0x00000000000088c8                _end = .
                [!provide]                        PROVIDE (end, .)
                0x00000000000088c8                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0xd4
 *(.comment)
 .comment       0x0000000000000000       0x35 init/Main.o
 .comment       0x0000000000000035       0x6a kernel/kernel.o
 .comment       0x000000000000009f       0x35 kernel/chr_drv/chr_drv.a(console.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(boot/system binary)
