由于文件 (符号) 而包含了归档成员

kernel/chr_drv/chr_drv.a(console.o)
                              kernel/kernel.o (console_print)

分配公共符号
公共符号            大小              文件

___strtok           0x4               kernel/kernel.o
mem_size            0x4               init/Main.o

舍弃的输入节

 .note.GNU-stack
                0x0000000000000000        0x0 init/Main.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/kernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/chr_drv/chr_drv.a(console.o)

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0x0
LOAD boot/head.o
LOAD init/Main.o
LOAD kernel/kernel.o
LOAD kernel/chr_drv/chr_drv.a
                [!provide]                        PROVIDE (__executable_start, 0x8048000)
                0x0000000008048000                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048000        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt
 *(.plt)
 *(.iplt)

.plt.got
 *(.plt.got)

.text           0x0000000000000000     0x6f53
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 .text.unlikely
                0x0000000000000000        0x0 init/Main.o
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000     0x64b8 boot/head.o
                0x0000000000000000                _pg_dir
                0x0000000000000000                _start
                0x0000000000001000                pg0
                0x0000000000002000                pg1
                0x0000000000003000                pg2
                0x0000000000004000                pg3
                0x0000000000005000                _tmp_floppy_area
                0x00000000000054b8                _idt
                0x0000000000005cb8                _gdt
 *fill*         0x00000000000064b8        0x8 
 .text          0x00000000000064c0       0xcb init/Main.o
                0x00000000000064c0                Main
 .text          0x000000000000658b      0x8d2 kernel/kernel.o
                0x000000000000658b                printk
                0x00000000000067bb                strcpy
                0x00000000000067d1                strncpy
                0x00000000000067f0                strcat
                0x0000000000006813                strncat
                0x0000000000006840                strcmp
                0x0000000000006863                strncmp
                0x000000000000688d                strchr
                0x00000000000068ac                strrchr
                0x00000000000068cd                strspn
                0x0000000000006900                strcspn
                0x0000000000006933                strpbrk
                0x0000000000006966                strstr
                0x0000000000006999                strlen
                0x00000000000069b2                strtok
                0x0000000000006a30                memcpy
                0x0000000000006a46                memmove
                0x0000000000006a6c                memcmp
                0x0000000000006a90                memchr
                0x0000000000006ab7                memset
                0x0000000000006acb                vsprintf
 .text          0x0000000000006e5d       0xf6 kernel/chr_drv/chr_drv.a(console.o)
                0x0000000000006e5d                consloe_set_cursor
                0x0000000000006e90                consloe_clear
                0x0000000000006ebd                console_print
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.rodata         0x0000000000006f54      0x16d
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.1
                0x0000000000006f54       0x57 init/Main.o
 *fill*         0x0000000000006fab        0x1 
 .rodata        0x0000000000006fac       0xc8 kernel/kernel.o
 .rodata.str1.4
                0x0000000000007074       0x4d kernel/kernel.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000000070c4      0x464
 *(.eh_frame)
 .eh_frame      0x00000000000070c4       0x98 init/Main.o
 .eh_frame      0x000000000000715c      0x370 kernel/kernel.o
 .eh_frame      0x00000000000074cc       0x5c kernel/chr_drv/chr_drv.a(console.o)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000008528                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000008528        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000008528        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x0000000000008528        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000008528                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000008528        0x0
 *(.got.plt)
 *(.igot.plt)

.data           0x0000000000008528        0x9
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000008528        0x0 boot/head.o
 .data          0x0000000000008528        0x8 init/Main.o
                0x0000000000008528                init_stack
 .data          0x0000000000008530        0x0 kernel/kernel.o
 .data          0x0000000000008530        0x1 kernel/chr_drv/chr_drv.a(console.o)
                0x0000000000008530                font_arrt

.data1
 *(.data1)
                0x0000000000008531                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x0000000000008531                . = .
                0x0000000000008531                __bss_start = .

.bss            0x0000000000008540      0x40c
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000008540        0x0 boot/head.o
 .bss           0x0000000000008540        0x0 init/Main.o
 .bss           0x0000000000008540      0x400 kernel/kernel.o
 .bss           0x0000000000008940        0x4 kernel/chr_drv/chr_drv.a(console.o)
                0x0000000000008940                fg_console
 *(COMMON)
 COMMON         0x0000000000008944        0x4 init/Main.o
                0x0000000000008944                mem_size
 COMMON         0x0000000000008948        0x4 kernel/kernel.o
                0x0000000000008948                ___strtok
                0x000000000000894c                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x000000000000894c                . = ALIGN (0x4)
                0x000000000000894c                . = SEGMENT_START ("ldata-segment", .)
                0x000000000000894c                . = ALIGN (0x4)
                0x000000000000894c                _end = .
                [!provide]                        PROVIDE (end, .)
                0x000000000000894c                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0xd4
 *(.comment)
 .comment       0x0000000000000000       0x35 init/Main.o
 .comment       0x0000000000000035       0x6a kernel/kernel.o
 .comment       0x000000000000009f       0x35 kernel/chr_drv/chr_drv.a(console.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(boot/system binary)
